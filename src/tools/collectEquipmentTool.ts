import { Tool } from "langchain/tools";

interface CollectEquipmentInput {
  customerId: string;
  customerLocation: string;
  customerName?: string;
  equipmentDescription?: string;
}

export class CollectEquipmentTool extends Tool {
  name = "collectEquipment";
  description = "Organiza coleta do equipamento ou oferece voucher baseado na localiza√ß√£o do cliente. Use ap√≥s 3 tentativas sem sucesso.";

  async _call(input: string): Promise<string> {
    try {
      let collectData: CollectEquipmentInput;
      
      try {
        collectData = JSON.parse(input);
      } catch {
        return "Erro: Dados de coleta inv√°lidos. Preciso do customerId e customerLocation.";
      }

      if (!collectData.customerId || !collectData.customerLocation) {
        return "Para organizar a coleta, preciso saber sua localiza√ß√£o (cidade/estado). Pode me informar?";
      }

      const isRemoteLocation = this.isRemoteFromJoinville(collectData.customerLocation);
      
      if (isRemoteLocation) {
        return this.generateVoucherResponse(collectData);
      } else {
        return this.generateCollectionResponse(collectData);
      }

    } catch (error) {
      console.error("Erro na coleta de equipamento:", error);
      return "Erro interno. Vou transferir para um t√©cnico especializado organizar a coleta.";
    }
  }

  private isRemoteFromJoinville(location: string): boolean {
    const locationLower = location.toLowerCase();
    
    // Estados do Norte e Nordeste
    const remoteStates = [
      // Norte
      'acre', 'ac', 'amap√°', 'ap', 'amazonas', 'am', 'par√°', 'pa', 
      'rond√¥nia', 'ro', 'roraima', 'rr', 'tocantins', 'to',
      // Nordeste  
      'alagoas', 'al', 'bahia', 'ba', 'cear√°', 'ce', 'maranh√£o', 'ma',
      'para√≠ba', 'pb', 'pernambuco', 'pe', 'piau√≠', 'pi', 
      'rio grande do norte', 'rn', 'sergipe', 'se'
    ];

    // Cidades espec√≠ficas conhecidas do Norte/Nordeste
    const remoteCities = [
      'manaus', 'bel√©m', 'fortaleza', 'recife', 'salvador', 'natal',
      'jo√£o pessoa', 'macei√≥', 'aracaju', 'teresina', 's√£o lu√≠s',
      'palmas', 'macap√°', 'boa vista', 'rio branco', 'porto velho'
    ];

    return remoteStates.some(state => locationLower.includes(state)) ||
           remoteCities.some(city => locationLower.includes(city));
  }

  private generateVoucherResponse(data: CollectEquipmentInput): string {
    const voucherCode = this.generateVoucherCode();
    
    // Em produ√ß√£o, aqui voc√™ salvaria no banco e enviaria por email
    console.log(`[VOUCHER] Gerado voucher ${voucherCode} para cliente ${data.customerId} em ${data.customerLocation}`);
    
    return `**VOUCHER DE ASSIST√äNCIA T√âCNICA**

Entendo sua frustra√ß√£o! Como voc√™ est√° em ${data.customerLocation}, que fica distante de nossa base em Joinville-SC, vou disponibilizar um voucher para assist√™ncia t√©cnica local.

**Detalhes do Voucher:**
‚Ä¢ **C√≥digo:** ${voucherCode}
‚Ä¢ **Valor:** R$ 150,00
‚Ä¢ **V√°lido por:** 30 dias
‚Ä¢ **Cliente:** ${data.customerName || data.customerId}

**Como usar:**
1. Procure uma assist√™ncia t√©cnica credenciada em sua regi√£o
2. Informe que possui voucher da Pichau
3. Apresente este c√≥digo: **${voucherCode}**
4. A assist√™ncia cobrar√° diretamente de n√≥s at√© R$ 150,00

**Assist√™ncias recomendadas em sua regi√£o:**
‚Ä¢ Busque por "assist√™ncia t√©cnica computador" no Google Maps
‚Ä¢ Verifique avalia√ß√µes e escolha uma bem avaliada
‚Ä¢ Confirme que aceitam voucher corporativo

**Confirma√ß√£o:**
‚Ä¢ Voc√™ receber√° este voucher por email em at√© 10 minutos
‚Ä¢ Em caso de d√∫vidas, entre em contato: suporte@pichau.com.br

Lamentamos n√£o conseguir resolver remotamente. Este voucher garante que voc√™ tenha o suporte necess√°rio! üíô`;
  }

  private generateCollectionResponse(data: CollectEquipmentInput): string {
    const collectId = this.generateCollectionId();
    
    // Em produ√ß√£o, aqui voc√™ criaria a ordem de coleta no sistema
    console.log(`[COLETA] Agendada coleta ${collectId} para cliente ${data.customerId} em ${data.customerLocation}`);
    
    return `**COLETA DE EQUIPAMENTO AGENDADA**

Como n√£o conseguimos resolver o problema remotamente, vou organizar a coleta do seu equipamento para reparo em nossa sede.

**Detalhes da Coleta:**
‚Ä¢ **Protocolo:** ${collectId}
‚Ä¢ **Cliente:** ${data.customerName || data.customerId}
‚Ä¢ **Localiza√ß√£o:** ${data.customerLocation}
‚Ä¢ **Equipamento:** ${data.equipmentDescription || 'Computador'}

**Agendamento:**
‚Ä¢ Nossa transportadora entrar√° em contato em at√© 24 horas
‚Ä¢ Coleta ser√° realizada em at√© 3 dias √∫teis
‚Ä¢ Hor√°rio: 8h √†s 18h (segunda a sexta)

**Prepara√ß√£o para coleta:**
‚Ä¢ Mantenha o equipamento embalado/protegido
‚Ä¢ Retire todos os cabos que n√£o sejam do problema
‚Ä¢ Anote a descri√ß√£o do defeito para o t√©cnico
‚Ä¢ Tenha um documento com foto em m√£os

**Processo de reparo:**
‚Ä¢ Diagn√≥stico: 1-2 dias √∫teis
‚Ä¢ Reparo: 3-5 dias √∫teis (dependendo da pe√ßa)
‚Ä¢ Retorno: 2-3 dias √∫teis para envio

**Acompanhamento:**
‚Ä¢ Voc√™ receber√° updates por email/WhatsApp
‚Ä¢ Protocolo para consultas: **${collectId}**

Nosso time t√©cnico cuidar√° do seu equipamento com todo carinho! üîßüíô`;
  }

  private generateVoucherCode(): string {
    const timestamp = Date.now().toString().slice(-6);
    const random = Math.random().toString(36).substr(2, 4).toUpperCase();
    return `PICH-${timestamp}-${random}`;
  }

  private generateCollectionId(): string {
    const timestamp = Date.now();
    const random = Math.random().toString(36).substr(2, 6).toUpperCase();
    return `COL-${timestamp}-${random}`;
  }

  // M√©todo est√°tico para criar entrada estruturada
  public static createCollectionRequest(
    customerId: string,
    customerLocation: string,
    customerName?: string,
    equipmentDescription?: string
  ): string {
    return JSON.stringify({
      customerId,
      customerLocation,
      customerName,
      equipmentDescription
    });
  }
}